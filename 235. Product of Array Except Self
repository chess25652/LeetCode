// https://leetcode.com/problems/product-of-array-except-self/

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int len = nums.size();
        vector<int> ans(len, 1);
        
        // Pass L->R, so ans[i] = nums[0] * nums[1] * ... * nums[i-1]
        
        int prod = nums[0];  // product of all numbers before [i]
        for (int i = 1; i < len; ++i) {
            ans[i] = prod;
            prod *= nums[i];
        }
        
        // Pass R->L, multiplying each ans[i] by nums[i+1] * nums[i+2] * ... * nums[len-1]
        prod = nums.back();
        for (int i = len-2; i >= 0; --i) {
            ans[i] *= prod;
            prod *= nums[i];
        }
        
        return ans;
    }
};
